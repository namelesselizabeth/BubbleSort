(0000) 3000  0011000000000000 (   5)                 .ORIG x3000
(3000) 0000  0000000000000000 (  10) ARRAY           .FILL x0000
(3001) 0000  0000000000000000 (  10)                 .FILL x0000
(3002) 0000  0000000000000000 (  10)                 .FILL x0000
(3003) 0000  0000000000000000 (  10)                 .FILL x0000
(3004) 0000  0000000000000000 (  10)                 .FILL x0000
(3005) 0000  0000000000000000 (  10)                 .FILL x0000
(3006) 0000  0000000000000000 (  10)                 .FILL x0000
(3007) 0000  0000000000000000 (  10)                 .FILL x0000
(3008) 0045  0000000001000101 (  10) PROMPT          .FILL x0045
(3009) 006E  0000000001101110 (  10)                 .FILL x006E
(300A) 0074  0000000001110100 (  10)                 .FILL x0074
(300B) 0065  0000000001100101 (  10)                 .FILL x0065
(300C) 0072  0000000001110010 (  10)                 .FILL x0072
(300D) 0020  0000000000100000 (  10)                 .FILL x0020
(300E) 0038  0000000000111000 (  10)                 .FILL x0038
(300F) 0020  0000000000100000 (  10)                 .FILL x0020
(3010) 006E  0000000001101110 (  10)                 .FILL x006E
(3011) 0075  0000000001110101 (  10)                 .FILL x0075
(3012) 006D  0000000001101101 (  10)                 .FILL x006D
(3013) 0062  0000000001100010 (  10)                 .FILL x0062
(3014) 0065  0000000001100101 (  10)                 .FILL x0065
(3015) 0072  0000000001110010 (  10)                 .FILL x0072
(3016) 0073  0000000001110011 (  10)                 .FILL x0073
(3017) 0020  0000000000100000 (  10)                 .FILL x0020
(3018) 0028  0000000000101000 (  10)                 .FILL x0028
(3019) 0030  0000000000110000 (  10)                 .FILL x0030
(301A) 002D  0000000000101101 (  10)                 .FILL x002D
(301B) 0031  0000000000110001 (  10)                 .FILL x0031
(301C) 0030  0000000000110000 (  10)                 .FILL x0030
(301D) 0030  0000000000110000 (  10)                 .FILL x0030
(301E) 0029  0000000000101001 (  10)                 .FILL x0029
(301F) 003A  0000000000111010 (  10)                 .FILL x003A
(3020) 0020  0000000000100000 (  10)                 .FILL x0020
(3021) 0000  0000000000000000 (  10)                 .FILL x0000
(3022) 0053  0000000001010011 (  11) OUTPUT_MSG      .FILL x0053
(3023) 006F  0000000001101111 (  11)                 .FILL x006F
(3024) 0072  0000000001110010 (  11)                 .FILL x0072
(3025) 0074  0000000001110100 (  11)                 .FILL x0074
(3026) 0065  0000000001100101 (  11)                 .FILL x0065
(3027) 0064  0000000001100100 (  11)                 .FILL x0064
(3028) 0020  0000000000100000 (  11)                 .FILL x0020
(3029) 006E  0000000001101110 (  11)                 .FILL x006E
(302A) 0075  0000000001110101 (  11)                 .FILL x0075
(302B) 006D  0000000001101101 (  11)                 .FILL x006D
(302C) 0062  0000000001100010 (  11)                 .FILL x0062
(302D) 0065  0000000001100101 (  11)                 .FILL x0065
(302E) 0072  0000000001110010 (  11)                 .FILL x0072
(302F) 0073  0000000001110011 (  11)                 .FILL x0073
(3030) 003A  0000000000111010 (  11)                 .FILL x003A
(3031) 0020  0000000000100000 (  11)                 .FILL x0020
(3032) 0000  0000000000000000 (  11)                 .FILL x0000
(3033) E1D4  1110000111010100 (  15) START           LEA   R0 PROMPT
(3034) F022  1111000000100010 (  16)                 TRAP  x22
(3035) 4805  0100100000000101 (  17)                 JSR   INPUT_NUMBERS
(3036) 4823  0100100000100011 (  18)                 JSR   BUBBLE_SORT
(3037) E1EA  1110000111101010 (  19)                 LEA   R0 OUTPUT_MSG
(3038) F022  1111000000100010 (  20)                 TRAP  x22
(3039) 483A  0100100000111010 (  21)                 JSR   DISPLAY_NUMBERS
(303A) F025  1111000000100101 (  22)                 TRAP  x25
(303B) E3C4  1110001111000100 (  26) INPUT_NUMBERS   LEA   R1 ARRAY
(303C) 2446  0010010001000110 (  27)                 LD    R2 NUM_EIGHT
(303D) 56E0  0101011011100000 (  28)                 AND   R3 R3 #0
(303E) 4807  0100100000000111 (  31) INPUT_LOOP      JSR   GET_NUM
(303F) 7040  0111000001000000 (  32)                 STR   R0 R1 #0
(3040) 1261  0001001001100001 (  33)                 ADD   R1 R1 #1
(3041) 16E1  0001011011100001 (  34)                 ADD   R3 R3 #1
(3042) 98BF  1001100010111111 (  35)                 NOT   R4 R2
(3043) 1903  0001100100000011 (  36)                 ADD   R4 R4 R3
(3044) 0BF9  0000101111111001 (  37)                 BRNP  INPUT_LOOP
(3045) C1C0  1100000111000000 (  38)                 RET   
(3046) 5020  0101000000100000 (  42) GET_NUM         AND   R0 R0 #0
(3047) 5260  0101001001100000 (  43)                 AND   R1 R1 #0
(3048) 54A0  0101010010100000 (  44)                 AND   R2 R2 #0
(3049) F020  1111000000100000 (  47) READ_DIGIT      TRAP  x20
(304A) F021  1111000000100001 (  48)                 TRAP  x21
(304B) 2238  0010001000111000 (  49)                 LD    R1 ASCII_OFFSET
(304C) 1001  0001000000000001 (  50)                 ADD   R0 R0 R1
(304D) 0402  0000010000000010 (  51)                 BRZ   DONE_READING
(304E) 14A1  0001010010100001 (  52)                 ADD   R2 R2 #1
(304F) 0FF9  0000111111111001 (  53)                 BRNZP READ_DIGIT
(3050) 4801  0100100000000001 (  56) DONE_READING    JSR   CHECK_VALUE
(3051) C1C0  1100000111000000 (  57)                 RET   
(3052) 0805  0000100000000101 (  61) CHECK_VALUE     BRN   GET_NUM_AGAIN
(3053) 2232  0010001000110010 (  62)                 LD    R1 MAX_VALUE
(3054) 927F  1001001001111111 (  63)                 NOT   R1 R1
(3055) 1240  0001001001000000 (  64)                 ADD   R1 R1 R0
(3056) 0601  0000011000000001 (  65)                 BRZP  GET_NUM_AGAIN
(3057) C1C0  1100000111000000 (  66)                 RET   
(3058) 4FED  0100111111101101 (  69) GET_NUM_AGAIN   JSR   GET_NUM
(3059) C1C0  1100000111000000 (  70)                 RET   
(305A) E3A5  1110001110100101 (  74) BUBBLE_SORT     LEA   R1 ARRAY
(305B) 2427  0010010000100111 (  75)                 LD    R2 NUM_EIGHT
(305C) 14BF  0001010010111111 (  76)                 ADD   R2 R2 #-1
(305D) 56E0  0101011011100000 (  77)                 AND   R3 R3 #0
(305E) 98BF  1001100010111111 (  81) SORT_OUTER_LOOP NOT   R4 R2
(305F) 1903  0001100100000011 (  82)                 ADD   R4 R4 R3
(3060) 0612  0000011000010010 (  83)                 BRZP  SORT_DONE
(3061) E39E  1110001110011110 (  84)                 LEA   R1 ARRAY
(3062) 2A20  0010101000100000 (  85)                 LD    R5 NUM_EIGHT
(3063) 1B7F  0001101101111111 (  86)                 ADD   R5 R5 #-1
(3064) 1D60  0001110101100000 (  89) SORT_INNER_LOOP ADD   R6 R5 #0
(3065) 040B  0000010000001011 (  90)                 BRZ   INNER_DONE
(3066) 6E40  0110111001000000 (  91)                 LDR   R7 R1 #0
(3067) 6041  0110000001000001 (  92)                 LDR   R0 R1 #1
(3068) 9FFF  1001111111111111 (  93)                 NOT   R7 R7
(3069) 1FC0  0001111111000000 (  94)                 ADD   R7 R7 R0
(306A) 0603  0000011000000011 (  95)                 BRZP  NO_SWAP
(306B) 6040  0110000001000000 (  96)                 LDR   R0 R1 #0
(306C) 7041  0111000001000001 (  97)                 STR   R0 R1 #1
(306D) 7E40  0111111001000000 (  98)                 STR   R7 R1 #0
(306E) 1261  0001001001100001 ( 100) NO_SWAP         ADD   R1 R1 #1
(306F) 1B7F  0001101101111111 ( 101)                 ADD   R5 R5 #-1
(3070) 0FF3  0000111111110011 ( 102)                 BRNZP SORT_INNER_LOOP
(3071) 16E1  0001011011100001 ( 105) INNER_DONE      ADD   R3 R3 #1
(3072) 0FEB  0000111111101011 ( 106)                 BRNZP SORT_OUTER_LOOP
(3073) C1C0  1100000111000000 ( 108) SORT_DONE       RET   
(3074) E38B  1110001110001011 ( 114) DISPLAY_NUMBERS LEA   R1 ARRAY
(3075) 240D  0010010000001101 ( 115)                 LD    R2 NUM_EIGHT
(3076) 56E0  0101011011100000 ( 116)                 AND   R3 R3 #0
(3077) 6040  0110000001000000 ( 119) DISPLAY_LOOP    LDR   R0 R1 #0
(3078) 4806  0100100000000110 ( 120)                 JSR   PRINT_NUM
(3079) 1261  0001001001100001 ( 121)                 ADD   R1 R1 #1
(307A) 16E1  0001011011100001 ( 122)                 ADD   R3 R3 #1
(307B) 98BF  1001100010111111 ( 123)                 NOT   R4 R2
(307C) 1903  0001100100000011 ( 124)                 ADD   R4 R4 R3
(307D) 0BF9  0000101111111001 ( 125)                 BRNP  DISPLAY_LOOP
(307E) C1C0  1100000111000000 ( 126)                 RET   
(307F) 2204  0010001000000100 ( 130) PRINT_NUM       LD    R1 ASCII_OFFSET
(3080) 1001  0001000000000001 ( 131)                 ADD   R0 R0 R1
(3081) F021  1111000000100001 ( 132)                 TRAP  x21
(3082) C1C0  1100000111000000 ( 133)                 RET   
(3083) 0008  0000000000001000 ( 137) NUM_EIGHT       .FILL x0008
(3084) FFD0  1111111111010000 ( 138) ASCII_OFFSET    .FILL xFFD0
(3085) 0030  0000000000110000 ( 139) ZERO_ASCII      .FILL x0030
(3086) 0064  0000000001100100 ( 140) MAX_VALUE       .FILL x0064
