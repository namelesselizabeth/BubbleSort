(0000) 3000  0011000000000000 (   5)                 .ORIG x3000
(3000) 0000  0000000000000000 (  10) ARRAY           .FILL x0000
(3001) 0000  0000000000000000 (  10)                 .FILL x0000
(3002) 0000  0000000000000000 (  10)                 .FILL x0000
(3003) 0000  0000000000000000 (  10)                 .FILL x0000
(3004) 0000  0000000000000000 (  10)                 .FILL x0000
(3005) 0000  0000000000000000 (  10)                 .FILL x0000
(3006) 0000  0000000000000000 (  10)                 .FILL x0000
(3007) 0000  0000000000000000 (  10)                 .FILL x0000
(3008) 0045  0000000001000101 (  10) PROMPT          .FILL x0045
(3009) 006E  0000000001101110 (  10)                 .FILL x006E
(300A) 0074  0000000001110100 (  10)                 .FILL x0074
(300B) 0065  0000000001100101 (  10)                 .FILL x0065
(300C) 0072  0000000001110010 (  10)                 .FILL x0072
(300D) 0020  0000000000100000 (  10)                 .FILL x0020
(300E) 0038  0000000000111000 (  10)                 .FILL x0038
(300F) 0020  0000000000100000 (  10)                 .FILL x0020
(3010) 006E  0000000001101110 (  10)                 .FILL x006E
(3011) 0075  0000000001110101 (  10)                 .FILL x0075
(3012) 006D  0000000001101101 (  10)                 .FILL x006D
(3013) 0062  0000000001100010 (  10)                 .FILL x0062
(3014) 0065  0000000001100101 (  10)                 .FILL x0065
(3015) 0072  0000000001110010 (  10)                 .FILL x0072
(3016) 0073  0000000001110011 (  10)                 .FILL x0073
(3017) 0020  0000000000100000 (  10)                 .FILL x0020
(3018) 0028  0000000000101000 (  10)                 .FILL x0028
(3019) 0030  0000000000110000 (  10)                 .FILL x0030
(301A) 002D  0000000000101101 (  10)                 .FILL x002D
(301B) 0031  0000000000110001 (  10)                 .FILL x0031
(301C) 0030  0000000000110000 (  10)                 .FILL x0030
(301D) 0030  0000000000110000 (  10)                 .FILL x0030
(301E) 0029  0000000000101001 (  10)                 .FILL x0029
(301F) 003A  0000000000111010 (  10)                 .FILL x003A
(3020) 0020  0000000000100000 (  10)                 .FILL x0020
(3021) 0000  0000000000000000 (  10)                 .FILL x0000
(3022) 0053  0000000001010011 (  11) OUTPUT_MSG      .FILL x0053
(3023) 006F  0000000001101111 (  11)                 .FILL x006F
(3024) 0072  0000000001110010 (  11)                 .FILL x0072
(3025) 0074  0000000001110100 (  11)                 .FILL x0074
(3026) 0065  0000000001100101 (  11)                 .FILL x0065
(3027) 0064  0000000001100100 (  11)                 .FILL x0064
(3028) 0020  0000000000100000 (  11)                 .FILL x0020
(3029) 006E  0000000001101110 (  11)                 .FILL x006E
(302A) 0075  0000000001110101 (  11)                 .FILL x0075
(302B) 006D  0000000001101101 (  11)                 .FILL x006D
(302C) 0062  0000000001100010 (  11)                 .FILL x0062
(302D) 0065  0000000001100101 (  11)                 .FILL x0065
(302E) 0072  0000000001110010 (  11)                 .FILL x0072
(302F) 0073  0000000001110011 (  11)                 .FILL x0073
(3030) 003A  0000000000111010 (  11)                 .FILL x003A
(3031) 0020  0000000000100000 (  11)                 .FILL x0020
(3032) 0000  0000000000000000 (  11)                 .FILL x0000
(3033) 000A  0000000000001010 (  12) NEWLINE         .FILL x000A
(3034) E1D3  1110000111010011 (  16) START           LEA   R0 PROMPT
(3035) F022  1111000000100010 (  17)                 TRAP  x22
(3036) 4805  0100100000000101 (  18)                 JSR   INPUT_NUMBERS
(3037) 4829  0100100000101001 (  19)                 JSR   BUBBLE_SORT
(3038) E1E9  1110000111101001 (  20)                 LEA   R0 OUTPUT_MSG
(3039) F022  1111000000100010 (  21)                 TRAP  x22
(303A) 4840  0100100001000000 (  22)                 JSR   DISPLAY_NUMBERS
(303B) F025  1111000000100101 (  23)                 TRAP  x25
(303C) E3C3  1110001111000011 (  27) INPUT_NUMBERS   LEA   R1 ARRAY
(303D) 245A  0010010001011010 (  28)                 LD    R2 NUM_EIGHT
(303E) 56E0  0101011011100000 (  29)                 AND   R3 R3 #0
(303F) 4807  0100100000000111 (  32) INPUT_LOOP      JSR   GET_NUM
(3040) 7040  0111000001000000 (  33)                 STR   R0 R1 #0
(3041) 1261  0001001001100001 (  34)                 ADD   R1 R1 #1
(3042) 16E1  0001011011100001 (  35)                 ADD   R3 R3 #1
(3043) 98BF  1001100010111111 (  36)                 NOT   R4 R2
(3044) 1903  0001100100000011 (  37)                 ADD   R4 R4 R3
(3045) 0BF9  0000101111111001 (  38)                 BRNP  INPUT_LOOP
(3046) C1C0  1100000111000000 (  39)                 RET   
(3047) 5020  0101000000100000 (  43) GET_NUM         AND   R0 R0 #0
(3048) 5260  0101001001100000 (  44)                 AND   R1 R1 #0
(3049) 54A0  0101010010100000 (  45)                 AND   R2 R2 #0
(304A) 264F  0010011001001111 (  46)                 LD    R3 ZERO_ASCII
(304B) F020  1111000000100000 (  49) READ_DIGIT      TRAP  x20
(304C) F021  1111000000100001 (  50)                 TRAP  x21
(304D) 1003  0001000000000011 (  51)                 ADD   R0 R0 R3
(304E) 0408  0000010000001000 (  52)                 BRZ   DONE_READING
(304F) 1003  0001000000000011 (  53)                 ADD   R0 R0 R3
(3050) 1241  0001001001000001 (  56)                 ADD   R1 R1 R1
(3051) 1241  0001001001000001 (  57)                 ADD   R1 R1 R1
(3052) 1241  0001001001000001 (  58)                 ADD   R1 R1 R1
(3053) 1241  0001001001000001 (  59)                 ADD   R1 R1 R1
(3054) 1240  0001001001000000 (  60)                 ADD   R1 R1 R0
(3055) 14A1  0001010010100001 (  62)                 ADD   R2 R2 #1
(3056) 0FF4  0000111111110100 (  63)                 BRNZP READ_DIGIT
(3057) 4801  0100100000000001 (  66) DONE_READING    JSR   CHECK_VALUE
(3058) C1C0  1100000111000000 (  67)                 RET   
(3059) 0805  0000100000000101 (  71) CHECK_VALUE     BRN   GET_NUM_AGAIN
(305A) 2840  0010100001000000 (  73)                 LD    R4 MAX_VALUE
(305B) 993F  1001100100111111 (  74)                 NOT   R4 R4
(305C) 1901  0001100100000001 (  75)                 ADD   R4 R4 R1
(305D) 0601  0000011000000001 (  76)                 BRZP  GET_NUM_AGAIN
(305E) C1C0  1100000111000000 (  77)                 RET   
(305F) 4FE7  0100111111100111 (  80) GET_NUM_AGAIN   JSR   GET_NUM
(3060) C1C0  1100000111000000 (  81)                 RET   
(3061) E39E  1110001110011110 (  85) BUBBLE_SORT     LEA   R1 ARRAY
(3062) 2435  0010010000110101 (  86)                 LD    R2 NUM_EIGHT
(3063) 14BF  0001010010111111 (  87)                 ADD   R2 R2 #-1
(3064) 56E0  0101011011100000 (  88)                 AND   R3 R3 #0
(3065) 98BF  1001100010111111 (  92) SORT_OUTER_LOOP NOT   R4 R2
(3066) 1903  0001100100000011 (  93)                 ADD   R4 R4 R3
(3067) 0612  0000011000010010 (  94)                 BRZP  SORT_DONE
(3068) E397  1110001110010111 (  95)                 LEA   R1 ARRAY
(3069) 2A2E  0010101000101110 (  96)                 LD    R5 NUM_EIGHT
(306A) 1B7F  0001101101111111 (  97)                 ADD   R5 R5 #-1
(306B) 1D60  0001110101100000 ( 100) SORT_INNER_LOOP ADD   R6 R5 #0
(306C) 040B  0000010000001011 ( 101)                 BRZ   INNER_DONE
(306D) 6E40  0110111001000000 ( 102)                 LDR   R7 R1 #0
(306E) 6041  0110000001000001 ( 103)                 LDR   R0 R1 #1
(306F) 9FFF  1001111111111111 ( 104)                 NOT   R7 R7
(3070) 1FC0  0001111111000000 ( 105)                 ADD   R7 R7 R0
(3071) 0603  0000011000000011 ( 106)                 BRZP  NO_SWAP
(3072) 6040  0110000001000000 ( 107)                 LDR   R0 R1 #0
(3073) 7041  0111000001000001 ( 108)                 STR   R0 R1 #1
(3074) 7E40  0111111001000000 ( 109)                 STR   R7 R1 #0
(3075) 1261  0001001001100001 ( 111) NO_SWAP         ADD   R1 R1 #1
(3076) 1B7F  0001101101111111 ( 112)                 ADD   R5 R5 #-1
(3077) 0FF3  0000111111110011 ( 113)                 BRNZP SORT_INNER_LOOP
(3078) 16E1  0001011011100001 ( 116) INNER_DONE      ADD   R3 R3 #1
(3079) 0FEB  0000111111101011 ( 117)                 BRNZP SORT_OUTER_LOOP
(307A) C1C0  1100000111000000 ( 119) SORT_DONE       RET   
(307B) E384  1110001110000100 ( 125) DISPLAY_NUMBERS LEA   R1 ARRAY
(307C) 241B  0010010000011011 ( 126)                 LD    R2 NUM_EIGHT
(307D) 56E0  0101011011100000 ( 127)                 AND   R3 R3 #0
(307E) 6040  0110000001000000 ( 130) DISPLAY_LOOP    LDR   R0 R1 #0
(307F) 4809  0100100000001001 ( 131)                 JSR   PRINT_NUM
(3080) 29B2  0010100110110010 ( 132)                 LD    R4 NEWLINE
(3081) 1120  0001000100100000 ( 133)                 ADD   R0 R4 #0
(3082) F021  1111000000100001 ( 134)                 TRAP  x21
(3083) 1261  0001001001100001 ( 135)                 ADD   R1 R1 #1
(3084) 16E1  0001011011100001 ( 136)                 ADD   R3 R3 #1
(3085) 98BF  1001100010111111 ( 137)                 NOT   R4 R2
(3086) 1903  0001100100000011 ( 138)                 ADD   R4 R4 R3
(3087) 0BF6  0000101111110110 ( 139)                 BRNP  DISPLAY_LOOP
(3088) C1C0  1100000111000000 ( 140)                 RET   
(3089) 54A0  0101010010100000 ( 143) PRINT_NUM       AND   R2 R2 #0
(308A) 1420  0001010000100000 ( 144)                 ADD   R2 R0 #0
(308B) 260E  0010011000001110 ( 145)                 LD    R3 ZERO_ASCII
(308C) 58A0  0101100010100000 ( 149) PRINT_LOOP      AND   R4 R2 #0
(308D) 18A0  0001100010100000 ( 150)                 ADD   R4 R2 #0
(308E) 1936  0001100100110110 ( 151)                 ADD   R4 R4 #-10
(308F) 0803  0000100000000011 ( 152)                 BRN   STORE_DIGIT
(3090) 192A  0001100100101010 ( 154)                 ADD   R4 R4 #10
(3091) 5B60  0101101101100000 ( 155)                 AND   R5 R5 #0
(3092) 1B61  0001101101100001 ( 156)                 ADD   R5 R5 #1
(3093) 1903  0001100100000011 ( 159) STORE_DIGIT     ADD   R4 R4 R3
(3094) 79BF  0111100110111111 ( 160)                 STR   R4 R6 #-1
(3095) 1DBF  0001110110111111 ( 161)                 ADD   R6 R6 #-1
(3096) 14B6  0001010010110110 ( 162)                 ADD   R2 R2 #-10
(3097) 0DF4  0000110111110100 ( 163)                 BRNZ  PRINT_LOOP
(3098) 0008  0000000000001000 ( 166) NUM_EIGHT       .FILL x0008
(3099) FFD0  1111111111010000 ( 167) ASCII_OFFSET    .FILL xFFD0
(309A) 0030  0000000000110000 ( 168) ZERO_ASCII      .FILL x0030
(309B) 0064  0000000001100100 ( 169) MAX_VALUE       .FILL x0064
